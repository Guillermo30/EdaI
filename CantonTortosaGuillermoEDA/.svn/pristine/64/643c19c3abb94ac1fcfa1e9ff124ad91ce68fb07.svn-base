package org.eda1.practica02.ejercicio01;

import org.eda1.estructurasdedatos.*;
public class DireccionMaquinas implements Comparable<Object> {
	
	private String direccion;
	private BSTree<MaquinaContador> maquinas;
	
	public DireccionMaquinas(){
		
		this.direccion="";
		this.maquinas=null;
		
	}
	
	public DireccionMaquinas(String direccion){
		
		this.direccion=direccion;
		this.maquinas=new BSTree<MaquinaContador>();
		
		
	}
	
	public DireccionMaquinas(String direccion,String maquina){
		
		this.direccion=direccion;
		this.maquinas = new BSTree<MaquinaContador>();
		MaquinaContador nueva= new MaquinaContador(maquina);
		this.maquinas.add(nueva);
		
		
	}
	
	public DireccionMaquinas(String direccion,String maquina,int contador){
		
		this.direccion=direccion;
		this.maquinas = new BSTree<MaquinaContador>();
		MaquinaContador nueva= new MaquinaContador(maquina,contador);
		this.maquinas.add(nueva);
		
		
	}

	public void setDireccion(String dir){
	
		this.direccion = dir;
	
	}
	
	public String getDireccion(){
		return this.direccion;
	}
	
	public BSTree<MaquinaContador>getMaquinas(){
		return this.maquinas;
		
	}
	
	public boolean addMaquinas(MaquinaContador mc){
		
		return this.maquinas.add(mc);
		
	}
	
	public boolean addMaquinasWithFind(MaquinaContador mc){
		
		MaquinaContador aux = this.maquinas.find(mc);
		
		if(aux != null){
			aux.incrementarContador();
			return true;
		}else{
			return this.maquinas.add(mc);
		}
	}
	
	@Override
	public int compareTo(Object nodo) {		
		return this.direccion.compareTo(((DireccionMaquinas)nodo).getDireccion());
	}
	
	@Override
	public boolean equals(Object obj){
		DireccionMaquinas aux = (DireccionMaquinas)obj;
		return this.direccion.equals(aux.direccion);
	}

	public String toString(){

		String resultado ="("+this.direccion+", "+this.maquinas.toString()+")";
		return resultado;
	}


	
}
