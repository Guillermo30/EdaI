<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="es">
<head>
<!-- Generated by javadoc (version 1.7.0) on Tue Jan 21 15:19:16 CET 2014 -->
<title>Graph</title>
<meta name="date" content="2014-01-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Graph";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Graph.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../org/eda1/estructurasdedatos/Collection.html" title="interface in org.eda1.estructurasdedatos"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../org/eda1/estructurasdedatos/Heap.html" title="class in org.eda1.estructurasdedatos"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?org/eda1/estructurasdedatos/Graph.html" target="_top">Frames</a></li>
<li><a href="Graph.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">org.eda1.estructurasdedatos</div>
<h2 title="Interface Graph" class="title">Interface Graph&lt;T&gt;</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><a href="../../../org/eda1/actividad05/Network.html" title="class in org.eda1.actividad05">Network</a>, <a href="../../../org/eda1/practica04/RoadNetwork.html" title="class in org.eda1.practica04">RoadNetwork</a></dd>
</dl>
<hr>
<br>
<pre>public interface <span class="strong">Graph&lt;T&gt;</span></pre>
<div class="block">An interface that defines access and update methods for the vertices
 and edges in a direct weighted graph.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#addEdge(T, T, double)">addEdge</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
       <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2,
       double&nbsp;w)</code>
<div class="block">If edge (v1, v2) is not in the graph, add the edge with weight
 w and return <tt>true</tt>; return <tt>false</tt> if the edge
 is already in the graph.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#addVertex(T)">addVertex</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</code>
<div class="block">If vertex v is not in the graph, add it to the graph and return
 <tt>true</tt>; otherwise return <tt>false</tt>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#clear()">clear</a></strong>()</code>
<div class="block">Removes all of the vertices and edges from the graph.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#containsEdge(T, T)">containsEdge</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
            <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</code>
<div class="block">Returns <tt>true</tt> if there is an edge from v1 to v2 and
 <tt>false</tt> otherwise.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#containsVertex(T)">containsVertex</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</code>
<div class="block">Returns <tt>true</tt> if v is a vertex in this graph and
 <tt>false</tt> otherwise.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Set&lt;<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#getNeighbors(T)">getNeighbors</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</code>
<div class="block">Returns the vertices that are adjacent to vertex v in a
 <tt>Set</tt> object.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#getWeight(T, T)">getWeight</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
         <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</code>
<div class="block">Returns the weight of the edge connecting vertex v1 to v2.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#isEmpty()">isEmpty</a></strong>()</code>
<div class="block">Returns <tt>true</tt> if this graph has not vertices or edges.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#numberOfEdges()">numberOfEdges</a></strong>()</code>
<div class="block">Returns the number of edges in this graph.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#numberOfVertices()">numberOfVertices</a></strong>()</code>
<div class="block">Returns the number of vertices in this graph.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#removeEdge(T, T)">removeEdge</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
          <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</code>
<div class="block">If edge (v1, v2) is in the graph, remove the edge and return
 <tt>true</tt>; otherwise return <tt>false</tt></div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#removeVertex(T)">removeVertex</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</code>
<div class="block">If vertex v is in the graph, remove it and return
 <tt>true</tt>; otherwise return <tt>false</tt>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#setWeight(T, T, double)">setWeight</a></strong>(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
         <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2,
         double&nbsp;w)</code>
<div class="block">If edge (v1, v2) is in the graph, update the weight of
 the edge and return the previous weight; otherwise, return
 <tt>-1</tt>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Set&lt;<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../org/eda1/estructurasdedatos/Graph.html#vertexSet()">vertexSet</a></strong>()</code>
<div class="block">Returns a set view of the vertices in this graph.</div>
</td>
</tr>
</table>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="numberOfVertices()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>numberOfVertices</h4>
<pre>int&nbsp;numberOfVertices()</pre>
<div class="block">Returns the number of vertices in this graph.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of vertices in this graph.</dd></dl>
</li>
</ul>
<a name="numberOfEdges()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>numberOfEdges</h4>
<pre>int&nbsp;numberOfEdges()</pre>
<div class="block">Returns the number of edges in this graph.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of edges in this graph.</dd></dl>
</li>
</ul>
<a name="isEmpty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEmpty</h4>
<pre>boolean&nbsp;isEmpty()</pre>
<div class="block">Returns <tt>true</tt> if this graph has not vertices or edges.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if this graph has not vertices or edges.</dd></dl>
</li>
</ul>
<a name="getWeight(java.lang.Object,java.lang.Object)">
<!--   -->
</a><a name="getWeight(T, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWeight</h4>
<pre>double&nbsp;getWeight(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
               <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</pre>
<div class="block">Returns the weight of the edge connecting vertex v1 to v2.
 If the edge (v1,v2) does not exist, return -1.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v1</code> - source vertex of the edge.</dd><dd><code>v2</code> - destination vertex of the edge.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the weight of the edge connecting vertex v1 to v2 or
         <tt>-1</tt> if it does not exist.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v1 or v2 is not a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="setWeight(java.lang.Object,java.lang.Object,double)">
<!--   -->
</a><a name="setWeight(T, T, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setWeight</h4>
<pre>double&nbsp;setWeight(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
               <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2,
               double&nbsp;w)</pre>
<div class="block">If edge (v1, v2) is in the graph, update the weight of
 the edge and return the previous weight; otherwise, return
 <tt>-1</tt>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v1</code> - source vertex of the edge.</dd><dd><code>v2</code> - destination vertex of the edge.</dd><dd><code>w</code> - weight assigned to the edge.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the original weight of the edge or <tt>-1</tt> if the edge does not exist.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v1 or v2 is not a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="getNeighbors(java.lang.Object)">
<!--   -->
</a><a name="getNeighbors(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNeighbors</h4>
<pre>java.util.Set&lt;<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&gt;&nbsp;getNeighbors(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</pre>
<div class="block">Returns the vertices that are adjacent to vertex v in a
 <tt>Set</tt> object.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v</code> - vertex in the graph.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the set of vertices that are adjacent to vertex v.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v is not a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="addEdge(java.lang.Object,java.lang.Object,double)">
<!--   -->
</a><a name="addEdge(T, T, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addEdge</h4>
<pre>boolean&nbsp;addEdge(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
              <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2,
              double&nbsp;w)</pre>
<div class="block">If edge (v1, v2) is not in the graph, add the edge with weight
 w and return <tt>true</tt>; return <tt>false</tt> if the edge
 is already in the graph.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v1</code> - source vertex of the new edge.</dd><dd><code>v2</code> - destination vertex of the new edge.</dd><dd><code>w</code> - weight assigned to the edge.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if a new edge is added.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v1 or v2 is not a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="addVertex(java.lang.Object)">
<!--   -->
</a><a name="addVertex(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addVertex</h4>
<pre>boolean&nbsp;addVertex(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</pre>
<div class="block">If vertex v is not in the graph, add it to the graph and return
 <tt>true</tt>; otherwise return <tt>false</tt>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v</code> - vertex in the graph.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if a new vertex is added.</dd></dl>
</li>
</ul>
<a name="removeEdge(java.lang.Object,java.lang.Object)">
<!--   -->
</a><a name="removeEdge(T, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeEdge</h4>
<pre>boolean&nbsp;removeEdge(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
                 <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</pre>
<div class="block">If edge (v1, v2) is in the graph, remove the edge and return
 <tt>true</tt>; otherwise return <tt>false</tt></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v1</code> - source vertex of the edge.</dd><dd><code>v2</code> - destination vertex of the edge.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if an edge is removed.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v1 or v2 is not a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="removeVertex(java.lang.Object)">
<!--   -->
</a><a name="removeVertex(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeVertex</h4>
<pre>boolean&nbsp;removeVertex(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</pre>
<div class="block">If vertex v is in the graph, remove it and return
 <tt>true</tt>; otherwise return <tt>false</tt>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v</code> - vertex in the graph.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if a vertex is removed.</dd></dl>
</li>
</ul>
<a name="clear()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clear</h4>
<pre>void&nbsp;clear()</pre>
<div class="block">Removes all of the vertices and edges from the graph.</div>
</li>
</ul>
<a name="vertexSet()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>vertexSet</h4>
<pre>java.util.Set&lt;<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&gt;&nbsp;vertexSet()</pre>
<div class="block">Returns a set view of the vertices in this graph.  The set is
 backed by the graph, so changes to the graph are reflected in the set, and
 vice-versa.  If the map is modified while an iteration over the set is
 in progress</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>a set view of the vertices in this graph.</dd></dl>
</li>
</ul>
<a name="containsVertex(java.lang.Object)">
<!--   -->
</a><a name="containsVertex(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>containsVertex</h4>
<pre>boolean&nbsp;containsVertex(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v)</pre>
<div class="block">Returns <tt>true</tt> if v is a vertex in this graph and
 <tt>false</tt> otherwise.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v</code> - vertex in the graph.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if v is a vertex in this graph.</dd></dl>
</li>
</ul>
<a name="containsEdge(java.lang.Object,java.lang.Object)">
<!--   -->
</a><a name="containsEdge(T, T)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>containsEdge</h4>
<pre>boolean&nbsp;containsEdge(<a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v1,
                   <a href="../../../org/eda1/estructurasdedatos/Graph.html" title="type parameter in Graph">T</a>&nbsp;v2)</pre>
<div class="block">Returns <tt>true</tt> if there is an edge from v1 to v2 and
 <tt>false</tt> otherwise.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>v1</code> - source vertex of the edge.</dd><dd><code>v2</code> - destination vertex of the edge.</dd>
<dt><span class="strong">Returns:</span></dt><dd><tt>true</tt> if there is an edge from v1 to v2.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if v1 or v2 is not a vertex in this graph.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Graph.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../org/eda1/estructurasdedatos/Collection.html" title="interface in org.eda1.estructurasdedatos"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../org/eda1/estructurasdedatos/Heap.html" title="class in org.eda1.estructurasdedatos"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?org/eda1/estructurasdedatos/Graph.html" target="_top">Frames</a></li>
<li><a href="Graph.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
